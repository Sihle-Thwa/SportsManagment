@import "tailwindcss";

/* --------------------------------------------------------------------------
   App shell (grid) â€” uses semantic tokens where available
   - first column follows sidebar width (expanded / collapsed)
   - topbar sits flush with sidebar (no gap)
   -------------------------------------------------------------------------- */

:root {
	/* fallback tokens (can be overridden by your semantic-tokens.css) */
	--sidebar-width-expanded: 250px;
	--sidebar-width-collapsed: 72px;
	--topbar-height: 72px;
}

/* Shell grid: column 1 = sidebar, column 2 = content */
.main-container {
	display: grid;
	grid-template-columns: var(--sidebar-width-expanded) 1fr;
	grid-template-rows: var(--topbar-height) 1fr;
	grid-template-areas:
		"sidebar header"
		"sidebar content";
	min-height: 100vh;
	width: 100%;
	box-sizing: border-box;
	background: var(--background, var(--colour-neutral-100));
	color: var(--foreground, var(--colour-neutral-900));
	transition: grid-template-columns var(--transition-fast)
		var(--easing-smooth, cubic-bezier(0.4, 0, 0.2, 1));
	overflow: hidden;
}

/* --------------------------------------------------------------------------
   Regions
   -------------------------------------------------------------------------- */
.app-sidebar {
	grid-area: sidebar;
	position: relative;
	z-index: 50;
	width: var(--sidebar-width-expanded);
	min-width: var(--sidebar-width-collapsed);
	box-sizing: border-box;
	/* visual border between sidebar and content */
	border-right: 1px solid var(--sidebar-border, var(--colour-neutral-200));
	background: var(--sidebar-background, var(--colour-neutral-100));
}

/* Ensure any fixed inner sidebar container (shadcn style) sits flush to the grid column */
.app-sidebar [data-slot="sidebar-container"] {
	left: 0 !important;
	right: auto !important;
}

/* Topbar spans the header area of the grid. Keep it sticky to top. */
.app-topbar {
	grid-area: header;
	height: var(--topbar-height);
	min-height: var(--topbar-height);
	display: flex;
	align-items: center;
	z-index: 40;
	position: sticky;
	top: 0;
}

/* Content region occupies the remaining grid area */
.app-content {
	grid-area: content;
	position: relative;
	height: calc(100vh - var(--topbar-height));
	overflow-y: auto;
	-webkit-overflow-scrolling: touch;
	background: var(--colour-neutral-50);
	transition: height var(--transition-fast)
		var(--easing-smooth, cubic-bezier(0.4, 0, 0.2, 1));
}

/* Constrain content width and provide page padding */
.content-wrapper {
	width: 100%;
	max-width: 1440px;
	margin: 0 auto;
	padding: 24px;
	display: flex;
	flex-direction: column;
	gap: 24px;
}

/* --------------------------------------------------------------------------
   Sidebar collapse / expand bindings
   - toggled by class on .main-container or data-sidebar-collapsed attribute
   -------------------------------------------------------------------------- */
.main-container.is-collapsed {
	grid-template-columns: var(--sidebar-width-collapsed) 1fr;
}

.main-container.is-expanded {
	grid-template-columns: var(--sidebar-width-expanded) 1fr;
}

/* data attribute parity (useful for JS/third-party observers) */
.main-container[data-sidebar-collapsed="true"] {
	grid-template-columns: var(--sidebar-width-collapsed) 1fr;
}

/* Defensive: nudge aside width to match state */
.main-container.is-collapsed .app-sidebar {
	width: var(--sidebar-width-collapsed);
}
.main-container.is-expanded .app-sidebar {
	width: var(--sidebar-width-expanded);
}

/* --------------------------------------------------------------------------
   Responsive behavior
   - On tablet and smaller we collapse grid to one column and let sidebar
     become off-canvas; the Sidebar component is responsible for that UI.
   -------------------------------------------------------------------------- */
@media (max-width: 1024px) {
	.main-container {
		--sidebar-width: var(--sidebar-width-expanded);
		--sidebar-width-collapsed: 0px;
		grid-template-columns: 1fr;
		grid-template-rows: var(--topbar-height) 1fr;
		grid-template-areas:
			"header"
			"content";
	}

	/* When sidebar is open, show overlay using modal token */
	.main-container.is-expanded::before {
		content: "";
		position: fixed;
		inset: 0;
		z-index: 45;
		background: var(--modal-overlay, rgba(0, 0, 0, 0.45));
		pointer-events: auto;
	}

	.app-sidebar {
		/* ensure the placeholder column doesn't take layout space on small screens */
		width: 0;
		min-width: 0;
		border-right: none;
	}

	.app-content {
		height: calc(100vh - var(--topbar-height));
	}
}

/* Mobile specifics */
@media (max-width: 640px) {
	:root {
		--sidebar-width: 100vw;
	}

	.content-wrapper {
		padding: 16px;
		gap: 16px;
	}

	.main-container {
		grid-template-rows: 64px 1fr;
	}

	.app-topbar {
		height: 64px;
	}

	.app-content {
		height: calc(100vh - 64px);
	}
}

/* --------------------------------------------------------------------------
   Accessibility & performance helpers
   -------------------------------------------------------------------------- */
.sr-only {
	position: absolute;
	width: 1px;
	height: 1px;
	padding: 0;
	margin: -1px;
	overflow: hidden;
	clip: rect(0, 0, 0, 0);
	white-space: nowrap;
	border: 0;
}

.focus\:not-sr-only:focus {
	position: static;
	width: auto;
	height: auto;
	padding: 0.5rem 1rem;
	margin: 0;
	overflow: visible;
	clip: auto;
	white-space: normal;
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
	.main-container,
	.app-sidebar,
	.content-wrapper {
		transition: none !important;
	}
	.app-content {
		scroll-behavior: auto;
	}
}

/* High contrast */
@media (prefers-contrast: high) {
	.app-sidebar,
	.app-topbar {
		border-width: 2px;
	}
}

/* Scrollbar styling (non-essential) */
.app-content::-webkit-scrollbar {
	width: 8px;
}
.app-content::-webkit-scrollbar-track {
	background: var(--scrollbar-track, var(--colour-neutral-50));
}
.app-content::-webkit-scrollbar-thumb {
	background: var(--scrollbar-thumb, var(--colour-neutral-400));
	border-radius: 4px;
}
.app-content::-webkit-scrollbar-thumb:hover {
	background: var(--scrollbar-thumb-hover, var(--colour-neutral-500));
}

/* Print */
@media print {
	.main-container {
		grid-template-columns: 1fr;
		grid-template-areas: "content";
	}
	.app-sidebar,
	.app-topbar {
		display: none;
	}
	.app-content {
		height: auto;
		overflow: visible;
	}
	.content-wrapper {
		padding: 0;
	}
}
