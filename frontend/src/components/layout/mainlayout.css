@import "tailwindcss";

/* --------------------------------------------------------------------------
   Grid shell — variables and defaults (first column = sidebar width)
   -------------------------------------------------------------------------- */
.main-container {
	/* sidebar sizes (toggle via state classes or data-attribute) */
	--sidebar-width: 250px;
	--sidebar-width-collapsed: 72px;
	--topbar-height: 72px;

	display: grid;
	grid-template-columns: var(--sidebar-width) 1fr;
	grid-template-rows: var(--topbar-height) 1fr;
	grid-template-areas:
		"sidebar header"
		"sidebar content";

	height: 100vh;
	width: 100%;
	background: var(--colour-neutral-100);
	transition: grid-template-columns 200ms
		var(--easing-smooth, cubic-bezier(0.4, 0, 0.2, 1));
	overflow: hidden;
	box-sizing: border-box;
}

/* ----------------------------
   Regions
   ---------------------------- */
.app-topbar {
	grid-area: header;
	height: var(--topbar-height);
	padding: 0 16px;
	width: 100%;
	z-index: 40;
	background: var(--colour-neutral-100);
	border-bottom: 1px solid var(--colour-neutral-100);
	display: flex;
	align-items: center;
	position: sticky;
	top: 0;
		
}

.app-sidebar {
	z-index: 50;
	grid-area: sidebar;
	border-right: 1px solid var(--colour-neutral-200);
	padding: 0;
	width: var(--sidebar-width);
	min-width: var(--sidebar-width-collapsed);
}

.app-content {
	grid-area: content;
	position: relative;
	height: calc(100vh - var(--topbar-height));
	background: var(--colour-neutral-100);
	scroll-behavior: smooth;
	overflow-y: auto;
	-webkit-overflow-scrolling: touch; /* momentum scroll on iOS */
	transition: height 200ms var(--easing-smooth, cubic-bezier(0.4, 0, 0.2, 1));
	
}

/* wrapper used by routes/pages */
.content-wrapper {
	width: 100%;
	margin: 0 auto;
	padding: 24px;
	display: flex;
	gap: 24px;
}

/* --------------------------------------------------------------------------
   Sidebar state bindings — class & data-attribute driven
   -------------------------------------------------------------------------- */
.main-container.is-collapsed {
	grid-template-columns: var(--sidebar-width-collapsed) 1fr;
}

.main-container.is-expanded {
	grid-template-columns: var(--sidebar-width) 1fr;
}

/* data attribute parity (programmatic control) */
.main-container[data-sidebar-collapsed="true"] {
	grid-template-columns: var(--sidebar-width-collapsed) 1fr;
}

/* align the inner fixed sidebar container (if the Sidebar component uses fixed)
   many sidebar implementations create a fixed inner container like:
     <div data-slot="sidebar-container" style="left: 0; position: fixed; ... />
   Overriding the left/right ensures the fixed element sits flush with the grid column. */
.app-sidebar [data-slot="sidebar-container"] {
	left: 0 !important;
	right: auto !important;
}

/* When collapsed we nudge the aside's inline size (defensive) */
.main-container.is-collapsed .app-sidebar {
	width: var(--sidebar-width-collapsed);
}
.main-container.is-expanded .app-sidebar {
	width: var(--sidebar-width);
}

/* --------------------------------------------------------------------------
   Mobile / Tablet responsive layout
   -------------------------------------------------------------------------- */
/* On tablet and mobile, the grid should collapse to a single column (topbar + content)
   the actual sidebar becomes off-canvas (component CSS handles visibility & animation) */
@media (max-width: 1024px) {
	.main-container {
		--sidebar-width: 250px;
		--sidebar-width-collapsed: 72px;
		grid-template-columns: 1fr;
		grid-template-rows: var(--topbar-height) 1fr;
		grid-template-areas:
			"header"
			"content";
	}

	/* When the app requests the sidebar open (is-expanded), we show an overlay */
	.main-container.is-expanded::before {
		content: "";
		position: fixed;
		inset: 0;
		z-index: 45;
		pointer-events: auto;
		width: 100%;
	}

	/* Ensure content still fills */
	.app-content {
		height: calc(100vh - var(--topbar-height));
	}
}

/* Mobile specifics */
@media (max-width: 640px) {
	:root {
		--sidebar-width: 100vw;
	}

	.content-wrapper {
		padding: 16px;
		gap: 16px;
	}


	.main-container {
		grid-template-rows: 64px 1fr;
	}

	.app-content {
		height: calc(100vh - 64px);
	}
}

/* --------------------------------------------------------------------------
   Small accessibility & performance helpers
   -------------------------------------------------------------------------- */
/* Skip link helpers */
.sr-only {
	position: absolute;
	width: 1px;
	height: 1px;
	padding: 0;
	margin: -1px;
	overflow: hidden;
	clip: rect(0, 0, 0, 0);
	white-space: nowrap;
	border: 0;
}
.focus\:not-sr-only:focus {
	position: static;
	width: auto;
	height: auto;
	padding: 0.5rem 1rem;
	margin: 0;
	overflow: visible;
	clip: auto;
	white-space: normal;
}

/* Reduced motion */
@media (prefers-reduced-motion: reduce) {
	.main-container,
	.app-sidebar,
	.content-wrapper {
		transition: none !important;
	}
	.app-content {
		scroll-behavior: auto;
	}
}

/* High contrast */
@media (prefers-contrast: high) {
	.app-sidebar,
	.app-topbar {
		border-width: 2px;
	}
}

/* Scrollbar */
.app-content::-webkit-scrollbar {
	width: 8px;
}
.app-content::-webkit-scrollbar-track {
	background: hsl(var(--muted, 210 40% 98%));
}
.app-content::-webkit-scrollbar-thumb {
	background: hsl(var(--muted-foreground, 215.4 16.3% 46.9%));
	border-radius: 4px;
}
.app-content::-webkit-scrollbar-thumb:hover {
	background: hsl(var(--accent-foreground, 210 40% 8%));
}

/* Print */
@media print {
	.main-container {
		grid-template-columns: 1fr;
		grid-template-areas: "content";
	}
	.app-sidebar,
	.app-topbar {
		display: none;
	}
	.app-content {
		height: auto;
		overflow: visible;
	}
	.content-wrapper {
		padding: 0;
	}
}
